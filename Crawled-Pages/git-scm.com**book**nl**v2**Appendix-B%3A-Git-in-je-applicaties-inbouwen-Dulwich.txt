        About
            Branching and Merging
            Small and Fast
            Distributed
            Data Assurance
            Staging Area
            Free and Open Source
            Trademark
        Documentation
            Reference
            Book
            Videos
            External Links
        Downloads
            GUI Clients
            Logos
        Community
This book is available in
  English.
  Full translation available in
    български език,
    Deutsch,
    Español,
    Français,
    Ελληνικά,
    日本語,
    한국어,
    Nederlands,
    Русский,
    Slovenščina,
    Tagalog,
    Українська
    简体中文,
  Partial translations available in
    Čeština,
    Македонски,
    Polski,
    Српски,
    Ўзбекча,
    繁體中文,
  Translations started for
    azərbaycan dili,
    Беларуская,
    فارسی,
    Indonesian,
    Italiano,
    Bahasa Melayu,
    Português (Brasil),
    Português (Portugal),
    Svenska,
    Türkçe.
The source of this book is  hosted on GitHub.
Patches, suggestions and comments are welcome.
  Chapters ▾
  1. Aan de slag
          1.1
          Over versiebeheer 
          1.2
          Een kort historisch overzicht van Git 
          1.3
          Wat is Git? 
          1.4
          De commando-regel 
          1.5
          Git installeren 
          1.6
          Git klaarmaken voor eerste gebruik 
          1.7
          Hulp krijgen 
          1.8
          Samenvatting 
  2. Git Basics
          2.1
          Een Git repository verkrijgen 
          2.2
          Wijzigingen aan de repository vastleggen 
          2.3
          De commit geschiedenis bekijken 
          2.4
          Dingen ongedaan maken 
          2.5
          Werken met remotes 
          2.6
          Taggen (Labelen) 
          2.7
          Git aliassen 
          2.8
          Samenvatting 
  3. Branchen in Git
          3.1
          Branches in vogelvlucht 
          3.2
          Eenvoudig branchen en mergen 
          3.3
          Branch-beheer 
          3.4
          Branch workflows 
          3.5
          Branches op afstand (Remote branches) 
          3.6
          Rebasen 
          3.7
          Samenvatting 
  4. Git op de server
          4.1
          De protocollen 
          4.2
          Git op een server krijgen 
          4.3
          Je publieke SSH sleutel genereren 
          4.4
          De server opzetten 
          4.5
          Git Daemon 
          4.6
          Slimme HTTP 
          4.7
          GitWeb 
          4.8
          GitLab 
          4.9
          Hosting oplossingen van derden 
          4.10
          Samenvatting 
  5. Gedistribueerd Git
          5.1
          Gedistribueerde workflows 
          5.2
          Bijdragen aan een project 
          5.3
          Het beheren van een project 
          5.4
          Samenvatting 
  6. GitHub
          6.1
          Account setup en configuratie 
          6.2
          Aan een project bijdragen 
          6.3
          Een project onderhouden 
          6.4
          Een organisatie beheren 
          6.5
          GitHub Scripten 
          6.6
          Samenvatting 
  7. Git Tools
          7.1
          Revisie Selectie 
          7.2
          Interactief stagen 
          7.3
          Stashen en opschonen 
          7.4
          Je werk tekenen 
          7.5
          Zoeken 
          7.6
          Geschiedenis herschrijven 
          7.7
          Reset ontrafeld 
          7.8
          Mergen voor gevorderden 
          7.9
          Rerere 
          7.10
          Debuggen met Git 
          7.11
          Submodules 
          7.12
          Bundelen 
          7.13
          Vervangen 
          7.14
          Het opslaan van inloggegevens 
          7.15
          Samenvatting 
  8. Git aanpassen
          8.1
          Git configuratie 
          8.2
          Git attributen 
          8.3
          Git Hooks 
          8.4
          Een voorbeeld van Git-afgedwongen beleid 
          8.5
          Samenvatting 
  9. Git en andere systemen
          9.1
          Git als een client 
          9.2
          Migreren naar Git 
          9.3
          Samenvatting 
  10. Git Binnenwerk
          10.1
          Binnenwerk en koetswerk (plumbing and porcelain) 
          10.2
          Git objecten 
          10.3
          Git Referenties 
          10.4
          Packfiles 
          10.5
          De Refspec 
          10.6
          Uitwisseling protocollen 
          10.7
          Onderhoud en gegevensherstel 
          10.8
          Omgevingsvariabelen 
          10.9
          Samenvatting 
  A1. Appendix A: Git in andere omgevingen
          A1.1
          Grafische interfaces 
          A1.2
          Git in Visual Studio 
          A1.3
          Git in Visual Studio Code 
          A1.4
          Git in Eclipse 
          A1.5
          Git in Sublime Text 
          A1.6
          Git in Bash 
          A1.7
          Git in Zsh 
          A1.8
          Git in PowerShell 
          A1.9
          Samenvatting 
  A2. Appendix B: Git in je applicaties inbouwen
          A2.1
          Commando-regel Git 
          A2.2
          Libgit2 
          A2.3
          JGit 
          A2.4
          go-git 
          A2.5
          Dulwich 
  A3. Appendix C: Git Commando’s
          A3.1
          Setup en configuratie 
          A3.2
          Projecten ophalen en maken 
          A3.3
          Basic Snapshotten 
          A3.4
          Branchen en mergen 
          A3.5
          Projecten delen en bijwerken 
          A3.6
          Inspectie en vergelijking 
          A3.7
          Debuggen 
          A3.8
          Patchen 
          A3.9
          Email 
          A3.10
          Externe systemen 
          A3.11
          Beheer 
          A3.12
          Binnenwerk commando’s (plumbing commando’s) 
      2nd Edition
    A2.5 Appendix B: Git in je applicaties inbouwen - Dulwich
Dulwich
Er is ook een zuivere Python Git implementatie - Dulwich.
Het project wordt gehost onder https://www.dulwich.io/
Het doel van het project is om een interface naar git repositories te bieden (zowel lokaal als remote) die geen directe git aanroepen doet, maar daarentegen puur Python gebruikt.
Het heeft echter een optionele C-extensie, die de prestaties behoorlijk versnelt.
Dulwich volgt het git ontwerp en maakt een scheiding tussen twee basisniveaus wat APIs betreft: binnenwerk en koetswerk (plumbing en porcelain).
Hier is een voorbeeld hoe een lager niveau API te gebruiken om toegang tot het commit-bericht van de laatste commit te benaderen:
from dulwich.repo import Repo
r = Repo('.')
r.head()
# '57fbe010446356833a6ad1600059d80b1e731e15'
c = r[r.head()]
c
# &lt;Commit 015fc1267258458901a94d228e39f0a378370466&gt;
c.message
# 'Add note about encoding.\n'
Om een commit-log af te drukken gebruikmakend van de API van het hogere niveau (porcelein), kan men het volgende doen:
from dulwich import porcelain
porcelain.log('.', max_entries=1)
#commit: 57fbe010446356833a6ad1600059d80b1e731e15
#Author: Jelmer Vernooĳ &lt;jelmer@jelmer.uk&gt;
#Date:   Sat Apr 29 2017 23:57:34 +0000
Meer weten
De officiële API documentatie is beschikbaar op https://www.dulwich.io/apidocs/dulwich.html
De officiële tutorial op https://www.dulwich.io/docs/tutorial heeft veel voorbeelden hoe specifieke taken met Dulwich uit te voeren
prev | next
    About this site
    Patches, suggestions, and comments are welcome.
    Git is a member of Software Freedom Conservancy
