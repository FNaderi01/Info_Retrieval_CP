     category > maptopic > article -->
    GitHub Docs
    All products
  GitHub Desktop
          インストールと設定
              概要
                  GitHub Desktop を使ってみる
                  Creating your first repository
                  Supported operating systems
                  キーボードショートカット
                  Launching from the command line
              GitHub Desktopのインストールと認証
                  Setup
                  インストール
                  認証
                  About connections to GitHub
                  GitHub Desktopの更新方法
                  GitHub Desktopのアンインストール方法
              GitHub Desktopの設定とカスタマイズ
                  Configuring Git
                  ベーシック設定
                  デフォルトエディタの設定方法
                  GitHub Desktop用のテーマ設定方法
                  Git LFS について
          コントリビューションとコラボレーション
              リポジトリの追加とクローン
                  ローカルコンピュータからGitHubデスクトップへのリポジトリの追加
                  GitHub Desktopを介してのGitHubへの既存プロジェクト追加
                  GitHub Desktopからのリポジトリのクローンとフォーク
                  GitHubからのGitHub Desktopへのリポジトリのクローン方法
              ブランチでの変更
                  ブランチを管理する
                  プロジェクトへの変更のコミットやレビュー
                  変更をプッシュする
                  コミットの打ち消し
                  タグを管理する
                  ブランチ履歴の表示
              GitHub、またはGitHub Enterpriseでのリモートリポジトリの操作
                  Issueもしくはプルリクエストの作成
                  プルリクエストを表示する
                  GitHub DesktopからのリモートのURL変更
              ローカルリポジトリと GitHub の同期を維持する
                  ブランチの同期
  ドキュメントには頻繁に更新が加えられ、その都度公開されています。本ページの翻訳はまだ未完成な部分があることをご了承ください。最新の情報については、英語のドキュメンテーションをご参照ください。本ページの翻訳に問題がある場合はこちらまでご連絡ください。
        GitHub Docs
                製品で調べる
                      GitHub Desktop
                       GitHub.com
                       Enterprise Administrators
                       GitHub Actions
                       GitHub Packages
                       Developers
                       REST API
                       GraphQL API
                       GitHub Insights
                       GitHub Desktop
                       Atom
                       Electron
                            日本語 (Japanese)
                              English
                              简体中文 (Simplified Chinese)
                              日本語 (Japanese)
                              Español (Spanish)
                              Português do Brasil (Portuguese)
    GitHub Desktop
    コントリビューションとコラボレーション
    ブランチでの変更
    プロジェクトへの変更のコミットやレビュー
        プロジェクトへの変更のコミットやレビュー
        GitHub Desktopでは、ファイルを編集すると、全ての変更が追跡されます。 有意義なコミットを作成するために、変更のまとめ方を決めることができます。
            Mac
            Windows
            Linux
            All
        ここには以下の内容があります:
          コミットについて
          1. ブランチの選択と変更の実行
          2. コミットに含める変更の選択方法
          3. コミットメッセージの入力と変更のプッシュ
    Did this doc help you?
    Want to learn about new docs features and updates? Sign up for updates!
    We're continually improving our docs. We'd love to hear how we can do better.
      What problem did you have?
        必須
        Choose an option
        Information was unclear
        The content was confusing
        The article didn't answer my question
        Other
      Let us know what we can do better
        任意
      Can we contact you if we have more questions?
        任意
      送信
    ありがとうございます。フィードバックが送信されました。
  Help us make these docs great!
  All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request.
    Make a contribution
  OR, learn how to contribute.
      コミットについて
Similar to saving a file that's been edited, a commit records changes to one or more files in your branch. Git assigns each commit a unique ID, called a SHA or hash, that identifies:
具体的な変更
変更時間
変更者
コミットするときは、変更を簡潔に説明するコミットメッセージを含める必要があります。 コラボレーションしているコミットに共作者を追加することもできます。
If the commits you make in GitHub Desktop are associated with the wrong account on GitHub, update the email address in your Git configuration using GitHub Desktop. 詳しい情報については、「GitHub Desktop 用の Git を設定する」を参照してください。
1. ブランチの選択と変更の実行
新しいブランチを作成するか、クリックして既存のブランチを選択します
 ツールバーの現在のブランチとリストからブランチを選択します。
1. Atomなどの好きなエディタを使って、プロジェクト内のファイルに必要な変更を加えてください。
2. コミットに含める変更の選択方法
テキストエディタでファイルに変更を加えて保存していくと、変更は、GitHub Desktopにも反映されます。
赤いアイコンは、削除されたファイルを表します。
黄色のアイコンは変更されたファイルを表します。
緑のアイコンは、追加されたファイルを表します。
stash した変更にアクセスするには、[Stashed Changes] をクリックします。 
すべてのファイルのすべての変更を 1 つのコミットに追加するには、リストの上部にあるチェックボックスを選択しておいてください。
1つ以上のファイルのすべての変更を 1つのコミットに追加するには、含めたくないファイルの隣のチェックボックスを解除し、コミットに含めたいファイルだけを残してください。 ファイルを選択した状態でスペースバーまたはEnterキーを押すと、チェックボックスの選択と解除を切り替えることができます。
部分的なコミットの作成方法
1つのファイルに複数の変更があり、一部だけをコミットに含めたい場合は、部分的なコミットを作成できます。 追加変更やコミットできるように、他の変更はそのまま残ります。 これにより、改行の変更をコードや構文の変更から区別するなど、個別で有意義なコミットの作成が可能になります。
ファイルのdiffを確認するとき、コミットに含まれる行は青色で強調表示されます。 変更を除外するには、青色が消えるように変更された行をクリックします。
変更の廃棄
1つのファイルや複数のファイルのコミットされていない全ての変更の廃棄、または最新コミット以降の全てのファイルの全ての変更の廃棄ができます。
変更されたファイルのリスト中で、最後のコミット以降の変更を破棄したいファイルオを選択してください。 複数のファイルを選択するには、shiftを押して変更を破棄したいファイルの範囲をクリックしてください。 
 Discard Changes（変更を破棄）あるいはDiscard Selected Changes（選択された変更を破棄）をクリックし、1つ以上のファイルへの変更を破棄するか、 Discard All Changes（すべての変更を破棄）をクリックして最後のコミット以降のすべてのファイルへの変更を破棄してください。
変更を確認するには、影響を受けるファイルをレビューしてDiscard Changes（変更を破棄）をクリックしてください。
ヒント：廃棄した変更は、Trash内の日付付きファイルに保存され、Trashが空になるまでは復元できます。
変更されたファイルのリスト中で、最後のコミット以降の変更を破棄したいファイルオを選択してください。 複数のファイルを選択するには、shiftを押して変更を破棄したいファイルの範囲をクリックしてください。 1.  Discard Changes（変更を破棄）あるいはDiscard Selected Changes（選択された変更を破棄）をクリックし、1つ以上のファイルへの変更を破棄するか、 Discard All Changes（すべての変更を破棄）をクリックして最後のコミット以降のすべてのファイルへの変更を破棄してください。
変更を確認するには、影響を受けるファイルをレビューしてDiscard Changes（変更を破棄）をクリックしてください。
ヒント：廃棄した変更は、Recycle Bin内のファイルに保存され、空になるまでは復元できます。
3. コミットメッセージの入力と変更のプッシュ
コミットに含めたい変更を決めたら、コミットメッセージを入力して変更をプッシュします。 コミットで共同作業した場合、コミットに 1 人以上の作者を追加できます。
注釈: デフォルトでは、GitHub Desktopは作成したタグを関連するコミットと共にリポジトリにプッシュします。 詳しい情報については、「タグを管理する」を参照してください。
変更のリストの下のSummary（サマリー）フィールドに短く分かりやすいコミットメッセージを入力してください。 Description（説明）フィールドに、変更に関するさらに詳しい情報を追加することもできます。
オプションとして、コミットに別の作者を追加するには、共作者を追加するアイコンをクリックし、追加するユーザ名を入力します。 
Description（説明）フィールドの下で、Commit to BRANCH（ブランチにコミット）をクリックしてください。
コミットしようとしているブランチが保護されている場合、Desktopは警告します。
変更を移動するには、switch branches（ブランチを切り替え）をクリックしてください。
保護されたブランチに変更をコミットするには、Commit to BRANCH（ブランチにコミット）をクリックしてください。
保護されたブランチに関する詳しい情報については「保護されたブランチについて」を参照してください。 
Click Push origin to push your local changes to the remote repository. 
    Did this doc help you?
    Want to learn about new docs features and updates? Sign up for updates!
    We're continually improving our docs. We'd love to hear how we can do better.
      What problem did you have?
        必須
        Choose an option
        Information was unclear
        The content was confusing
        The article didn't answer my question
        Other
      Let us know what we can do better
        任意
      Can we contact you if we have more questions?
        任意
      送信
    ありがとうございます。フィードバックが送信されました。
  Help us make these docs great!
  All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request.
    Make a contribution
  OR, learn how to contribute.
      Still need help?
      Ask the GitHub community
      サポートへの連絡
        製品
          機能
          セキュリティ
          Enterprise
          ケーススタディ
          価格
          リソース
        プラットフォーム
          開発者 API
          パートナー
          Atom
          Electron
          GitHub Desktop
        サポート
          ヘルプ
          コミュニティフォーラム
          トレーニング
          状況
          GitHubに連絡
        会社
          GitHubについて
          ブログ
          キャリア
          プレス
          ショップ
        © 2020 GitHub, Inc.
        規約 
        プライバシー 
