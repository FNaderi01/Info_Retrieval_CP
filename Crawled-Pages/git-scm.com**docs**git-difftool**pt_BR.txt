        About
            Branching and Merging
            Small and Fast
            Distributed
            Data Assurance
            Staging Area
            Free and Open Source
            Trademark
        Documentation
            Reference
            Book
            Videos
            External Links
        Downloads
            GUI Clients
            Logos
        Community
  Português (Brasil) ▾
  Localized versions of git-difftool manual
        English
        Português (Brasil)
    Want to read in your language or fix typos? You can help translate this page.
    Topics ▾
      Setup and Config
  git
  config
  help
  bugreport
      Getting and Creating Projects
  init
  clone
      Basic Snapshotting
  add
  status
  diff
  commit
  notes
  restore
  reset
  rm
  mv
      Branching and Merging
  branch
  checkout
  switch
  merge
  mergetool
  log
  stash
  tag
  worktree
      Sharing and Updating Projects
  fetch
  pull
  push
  remote
  submodule
      Inspection and Comparison
  show
  log
  diff
  difftool
  range-diff
  shortlog
  describe
      Patching
  apply
  cherry-pick
  diff
  rebase
  revert
      Debugging
  bisect
  blame
  grep
      Email
  am
  apply
  format-patch
  send-email
  request-pull
      External Systems
  svn
  fast-import
      Server Admin
  daemon
  update-server-info
      Guides
  gitattributes
  Command-line interface conventions
  Everyday Git
  Frequently Asked Questions (FAQ)
  Glossary
  githooks
  gitignore
  gitmodules
  Revisions
  Submodules
  Tutorial
  Workflows
      Administration
  clean
  gc
  fsck
  reflog
  filter-branch
  instaweb
  archive
  bundle
      Plumbing Commands
  cat-file
  check-ignore
  checkout-index
  commit-tree
  count-objects
  diff-index
  for-each-ref
  hash-object
  ls-files
  ls-tree
  merge-base
  read-tree
  rev-list
  rev-parse
  show-ref
  symbolic-ref
  update-index
  update-ref
  verify-pack
  write-tree
      Latest version
       ▾ 
git-difftool last updated in 2.28.0
  Changes in the git-difftool manual
        2.22.1 → 2.28.0 no changes
        2.22.0
          06/07/19
        2.13.7 → 2.21.3 no changes
        2.12.5
          09/22/17
        2.10.5 → 2.11.4 no changes
        2.9.5
          07/30/17
        2.3.10 → 2.8.6 no changes
        2.2.3
          09/04/15
    See more previous releases → -->
    Check your version of git by running
    $
NOME
git-difftool - Exiba as alterações utilizando as ferramentas comuns do diff
RESUMO
git difftool [&lt;opções&gt;] [&lt;commit&gt; [&lt;commit&gt;]] [--] [&lt;caminho&gt;…​]
DESCRIÇÃO
O git difftool é um comando Git que permite comparar e editar os arquivos
entre revisões utilizando ferramentas "diff" comuns.  O git difftool é um
frontend para o comando git diff e aceita as mesmas opções e
argumentos. Consulte git-diff[1].
OPÇÕES
 -d 
 --dir-diff 
Copie os arquivos modificados para um local temporário e execute um "diff"
neles. Este modo nunca avisa nada antes de executar a ferramenta diff.
 -y 
 --no-prompt 
Não avise antes de iniciar uma ferramenta diff.
 --prompt 
Dê um alerta antes de cada invocação da ferramenta diff.  Este é o
comportamento predefinido; a opção está disponível para sobrescrever
quaisquer configurações.
 -t &lt;ferramenta&gt; 
 --tool=&lt;ferramenta&gt; 
Utilize a ferramenta diff especificada por &lt;ferramenta&gt;.  Os valores válidos
incluem emerge, kompare, meld e vimdiff. Execute o git difftool
--tool-help para ver uma lista de configurações válidas para &lt;ferramenta&gt;.
Caso uma ferramenta diff não seja especificada, git difftool utilizará a
variável de configuração diff.tool.  Caso a variável de configuração
diff.tool não esteja definida, o git difftool escolherá um padrão
adequado.
Você pode fornecer explicitamente um caminho completo para a ferramenta
definindo a variável de configuração difftool.&lt;ferramenta&gt;.path. Por
exemplo, você pode configurar o caminho absoluto para o kdiff3 configurando
difftool.kdiff3.path. Caso contrário, o git difftool assume que a
ferramenta está disponível no PATH.
Em vez de executar uma das ferramentas "diff" conhecidas, o git difftool
pode ser customizado para executar um programa alternativo, utilizando a
linha de comando para chamar uma variável de configuração
difftool.&lt;ferramenta&gt;.cmd.
Quando o git difftool é chamado com esta ferramenta (através da opção
-t, --tool ou da variável de configuração diff.tool), a linha de
comando configurada será chamada com as seguintes variáveis disponíveis:
$LOCAL é definido como o nome do arquivo temporário que contenha o
conteúdo da pré-imagem "diff" e $REMOTE é definido como o nome do arquivo
temporário que contenha o conteúdo "diff" da pós-imagem diff.  $MERGED é o
nome do arquivo que está sendo comparado. $BASE é disponibilizado para
compatibilidade com comandos personalizados da ferramenta de mesclagem e tem
o mesmo valor que $MERGED.
 --tool-help 
Imprima uma lista de ferramentas "diff" que podem ser utilizadas com
--tool.
 --[no-]symlinks 
O comportamento padrão do git difftool é criar links simbólicos para a
árvore de trabalho quando executado no modo --dir-diff e o lado direito da
comparação produz o mesmo conteúdo que o arquivo na árvore de trabalho.
Especificar --no-symlinks instrui o git difftool para criar cópias.
--no-symlinks é a predefinição no Windows.
 -x &lt;comando&gt; 
 --extcmd = &lt;comando&gt; 
Especifique um comando personalizado para exibir os "diffs".  git-difftool
executa $command $LOCAL $REMOTE e ignora as predefinições configuradas
quando esta opção é utilizada.  A variável $BASE é definido no ambiente.
 -g 
 --[no-]gui 
Quando o comando git-difftool é chamado com a opção -g ou --gui, a
ferramenta diff predefinida será lida na variável diff.guitool configurada
em vez do diff.tool. A opção --no-gui pode ser usada para substituir
essa configuração. Caso o diff.guitool não esteja definido, retroagiremos
na seguinte ordem, merge.guitool, diff.tool, merge.tool até que uma
ferramenta seja encontrada.
 --[no-]trust-exit-code 
git-difftool invoca uma ferramenta "diff" individualmente em cada
arquivo.  Os erros relatados pela ferramenta "diff" são ignorados.  Utilize
--trust-exit-code para fazer git-difftool encerrar quando uma ferramenta
"diff" retornar um código de saída diferente de zero.
git-difftool encaminhará o código de encerramento da ferramenta chamada
quando --trust-exit-code for utilizado.
Para ver a lista completa das opções compatíveis consulte
git-diff[1].
CONFIGURAÇÃO DAS VARIÁVEIS
O git difftool retorna às variáveis da configuração do git mergetool
quando os equivalentes "difftool" não estiverem definidos.
 diff.tool 
A ferramenta diff predefinida que será utilizada.
 diff.guitool 
A ferramenta diff predefinida a ser utilizada quando --gui for utilizado.
 difftool.&lt;ferramenta&gt;.path 
Substitua o caminho para a ferramenta informada.  É útil caso a sua
ferramenta não esteja no PATH.
 difftool.&lt;ferramenta&gt;.cmd 
Especifique o comando para chamar a ferramenta diff.
Consulte a opção --tool=&lt;ferramenta&gt; acima para mais detalhes.
 difftool.prompt 
Avisar antes de cada chamada da ferramenta diff.
 difftool.trustExitCode 
Encerrar o difftool caso a ferramenta "diff" retorne uma condição de
encerramento diferente de zero.
Consulte a opção --trust-exit-code acima para mais detalhes.
VEJA TAMBÉM
 git-diff[1] 
Exibir as alterações entre os commits, os commits, árvore de trabalho, etc
 git-mergetool[1] 
Execute as ferramentas de resolução de conflitos de mesclagem para resolver
os conflitos
 git-config[1] 
Obter e definir as opções globais ou as de repositório
GIT
Parte do conjunto git[1]
    About this site
    Patches, suggestions, and comments are welcome.
    Git is a member of Software Freedom Conservancy
