     category > maptopic > article -->
    GitHub Docs
    All products
  Enterprise Administrators
          Overview
          About enterprise accounts
          Managing your GitHub Enterprise license
          Managing billing for GitHub Enterprise
          System overview
          About the GitHub Enterprise Server API
          Installing
              Setting up a GitHub Enterprise Server instance
                  Installing GitHub Enterprise Server on AWS
                  Installing GitHub Enterprise Server on Azure
                  Installing GitHub Enterprise Server on Google Cloud Platform
                  Installing GitHub Enterprise Server on Hyper-V
                  Installing GitHub Enterprise Server on OpenStack KVM
                  Installing GitHub Enterprise Server on VMware
                  Installing GitHub Enterprise Server on XenServer
                  Setting up a staging instance
          Configuring GitHub Enterprise
              Configuring your enterprise
                  Accessing the management console
                  Accessing the administrative shell (SSH)
                  Enabling and scheduling maintenance mode
                  Configuring backups on your appliance
                  Site admin dashboard
                  Enabling private mode
                  Configuring rate limits
                  Configuring applications
                  Troubleshooting SSL errors
                  Configuring time synchronization
                  Command-line utilities
                  Configuring GitHub Pages on your appliance
              Configuring network settings
                  Configuring the IP address using the virtual machine console
                  Configuring DNS nameservers
                  Configuring a hostname
                  Validating your domain settings
                  Configuring TLS
                  Enabling subdomain isolation
                  Configuring an outbound web proxy server
                  Configuring built-in firewall rules
                  Network ports
                  Using GitHub Enterprise Server with a load balancer
              Managing connections between GitHub Enterprise Server and GitHub Enterprise Cloud
                  Connecting GitHub Enterprise Server to GitHub Enterprise Cloud
                  Enabling unified search between GitHub Enterprise Server and GitHub.com
                  Enabling unified contributions between GitHub Enterprise Server and GitHub.com
                  Enabling alerts for vulnerable dependencies on GitHub Enterprise Server
                  Enabling automatic user license sync between GitHub Enterprise Server and GitHub Enterprise Cloud
          Authentication
              Authenticating users for your GitHub Enterprise Server instance
                  Using built-in authentication
                  Disabling unauthenticated sign-ups
                  Using CAS
                  Using SAML
                  Using LDAP
                  Allowing built-in authentication for users outside your identity provider
                  Changing authentication methods
          Managing users, organizations, and repositories
              Managing users in your enterprise
                  Promoting or demoting a site administrator
                  Best practices for user security
                  Auditing users across your instance
                  Managing dormant users
                  Suspending and unsuspending users
                  Placing a legal hold on a user or organization
                  Auditing SSH keys
                  Customizing user messages on your instance
                  Configuring email for notifications
                  Rebuilding contributions data
                  Managing global webhooks
              Managing organizations in your enterprise
                  Creating organizations
                  Configuring visibility for organization membership
                  Preventing users from creating organizations
                  Requiring two-factor authentication for an organization
                  Creating teams
                  Adding people to teams
                  Removing users from teams and organizations
                  Managing projects using JIRA
                  Continuous integration using Jenkins
              Managing repositories in your enterprise
                  Configuring Git Large File Storage for your enterprise
                  Disabling Git SSH access on GitHub Enterprise Server
                  Troubleshooting service hooks
              Monitoring activity in your enterprise
                  Activity dashboard
                  Audit logging
                  Searching the audit log
                  Audited actions
                  Viewing push logs
              Migrating data to and from your enterprise
                  About migrations
                  Exporting migration data from your enterprise
                  Exporting migration data from GitHub.com
                  Preparing to migrate data to your enterprise
                  Migrating data to your enterprise
                  Importing data from third-party version control systems
          Setting policies for your enterprise
              Enforcing policies for your enterprise
                  Enforcing repository management policies in your enterprise
              Enforcing policy with pre-receive hooks
                  About pre-receive hooks
                  Creating a pre-receive hook environment
                  Creating a pre-receive hook script
                  Managing pre-receive hooks on the GitHub Enterprise Server appliance
          Monitoring, managing, and updating your enterprise
              Monitoring your appliance
                  Accessing the monitor dashboard
                  Recommended alert thresholds
                  Setting up external monitoring
                  Configuring collectd
                  Log forwarding
                  Monitoring using SNMP
              Updating the virtual machine and physical resources
                  Upgrade requirements
                  Upgrading GitHub Enterprise Server
                  Enabling automatic update checks
                  Increasing storage capacity
                  Increasing CPU or memory resources
                  Migrating from GitHub Enterprise 11.10.x to 2.1.23
                  Migrating Elasticsearch indices to GitHub Enterprise Server 2.14 or later
              Configuring clustering
                  About clustering
                  Differences between clustering and high availability (HA)
                  About cluster nodes
                  Cluster network configuration
                  Initializing the cluster
                  Upgrading a cluster
                  Monitoring cluster nodes
                  Replacing a cluster node
                  Evacuating a cluster node
              Configuring high availability
                  About high availability configuration
                  Creating a high availability replica
                  Initiating a failover to your replica appliance
                  Recovering a high availability configuration
                  Removing a high availability replica
                  About geo-replication
          Working with GitHub Support
              Overview
                  About GitHub Enterprise Support
                  About GitHub Premium Support for GitHub Enterprise Server
                  About GitHub Premium Support for GitHub Enterprise
                  About support for Advanced Security
              Receiving help from GitHub Support
                  Reaching GitHub Support
                  Preparing to submit a ticket
                  Submitting a ticket
                  Providing data to GitHub Support
        GitHub Docs
                Explore by product
                      Enterprise Administrators
                       GitHub.com
                       Enterprise Administrators
                       GitHub Actions
                       GitHub Packages
                       Developers
                       REST API
                       GraphQL API
                       GitHub Insights
                       GitHub Desktop
                       Atom
                       Electron
                            English
                              English
                              简体中文 (Simplified Chinese)
                              日本語 (Japanese)
                              Español (Spanish)
                              Português do Brasil (Portuguese)
          This version of GitHub Enterprise will be discontinued on
          This version of GitHub Enterprise was discontinued on
        2020-11-12.
      No patch releases will be made, even for critical security issues. For better performance, improved security, and new features, upgrade to the latest version of GitHub Enterprise.
For help with the upgrade, contact GitHub Enterprise support.
      Article version: Enterprise Server 2.19
      Enterprise Server 2.22
      Enterprise Server 2.21
      Enterprise Server 2.20
      Enterprise Server 2.19
    Enterprise Administrators
    Managing users, organizations, and repositories
    Managing repositories in your enterprise
    Configuring Git Large File Storage for your enterprise
      Article version: Enterprise Server 2.19
      Enterprise Server 2.22
      Enterprise Server 2.21
      Enterprise Server 2.20
      Enterprise Server 2.19
        Configuring Git Large File Storage for your enterprise
        Git Large File Storage (Git LFS) is an open source extension to Git that allows you to work with large files the same way as other text files.
        In this article
          About Git Large File Storage
          Configuring Git Large File Storage for your appliance
          Configuring Git Large File Storage for an individual repository
          Configuring Git Large File Storage for every repository owned by a user account or organization
          Configuring Git Large File Storage to use a third party server
          Migrating to a different Git Large File Storage server
          Further reading
    Did this doc help you?
    Want to learn about new docs features and updates? Sign up for updates!
    We're continually improving our docs. We'd love to hear how we can do better.
      What problem did you have?
        Required
        Choose an option
        Information was unclear
        The content was confusing
        The article didn't answer my question
        Other
      Let us know what we can do better
        Optional
      Can we contact you if we have more questions?
        Optional
      Send
    Thank you! Your feedback has been submitted.
  Help us make these docs great!
  All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request.
    Make a contribution
  Or, learn how to contribute.
      About Git Large File Storage
Git Large File Storage (Git LFS) is an open source extension to Git that allows you to work with large files the same way as other text files. You can use Git Large File Storage with a single repository, all of your personal or organization repositories, or with every repository in your GitHub Enterprise Server instance. Before you can enable Git LFS for specific repositories or organizations, you need to enable Git LFS for your appliance.
By default, the Git Large File Storage client stores large assets on the same server that hosts the Git repository. When Git LFS is enabled on the GitHub Enterprise Server appliance, large assets are stored on the data partition in /data/user/storage.
Users cannot push Git LFS assets to GitHub Enterprise Server if Git LFS is disabled on the appliance or repository.
For more information, see "About Git Large File Storage", "Versioning large files," and the Git Large File Storage project site.
Configuring Git Large File Storage for your appliance
From a GitHub Enterprise Server administrative account, click  in the upper-right corner of any page.
In the left sidebar, click Enterprise.
In the enterprise account sidebar, click  Settings.
Under " Settings", click Options.
Under "Git LFS access", use the drop-down menu, and click Enabled or Disabled.
Configuring Git Large File Storage for an individual repository
Note: Each repository automatically inherits default settings from the organization or user that owns it. You cannot override the default setting if the repository's owner has enforced the setting on all of their repositories.
From a GitHub Enterprise Server administrative account, click  in the upper-right corner of any page.
In the search field, type the name of the repository and click Search.
In the search results, click the name of the repository.
In the upper-right corner of the page, click  Admin.
In the left sidebar, click Admin.
Under "Git LFS", click Enable or Disable.
Configuring Git Large File Storage for every repository owned by a user account or organization
From a GitHub Enterprise Server administrative account, click  in the upper-right corner of any page.
In the search field, type the name of the user or organization and click Search.
In the search results, click the name of the user or organization.
In the upper-right corner of the page, click  Admin.
In the left sidebar, click Admin.
Under "Git LFS", click Enable or Disable.
Configuring Git Large File Storage to use a third party server
By default, the Git Large File Storage client stores large assets on the same server that hosts the Git repository. When Git LFS is enabled on the GitHub Enterprise Server appliance, large assets are stored on the data partition in /data/user/storage.
Users cannot push Git LFS assets to GitHub Enterprise Server if Git LFS is disabled on the appliance or repository.
Disable Git LFS on the GitHub Enterprise Server appliance. For more information, see "Configuring Git Large File Storage."
Create a Git LFS configuration file that points to the third party server.
# Show default configuration
$ git lfs env
&gt; git-lfs/1.1.0 (GitHub; darwin amd64; go 1.5.1; git 94d356c)
&gt; git version 2.7.4 (Apple Git-66)
&gt; Endpoint=https://GITHUB-ENTERPRISE-HOST/path/to/repo/info/lfs (auth=basic)
# Create .lfsconfig that points to third party server.
$ git config -f .lfsconfig remote.origin.lfsurl https://THIRD-PARTY-LFS-SERVER/path/to/repo
$ git lfs env
&gt; git-lfs/1.1.0 (GitHub; darwin amd64; go 1.5.1; git 94d356c)
&gt; git version 2.7.4 (Apple Git-66)
&gt; Endpoint=https://THIRD-PARTY-LFS-SERVER/path/to/repo/info/lfs (auth=none)
# Show the contents of .lfsconfig
$ cat .lfsconfig
[remote "origin"]
lfsurl = https://THIRD-PARTY-LFS-SERVER/path/to/repo
To keep the same Git LFS configuration for each user, commit a custom .lfsconfig file to the repository.
$ git add .lfsconfig
$ git commit -m "Adding LFS config file"
Migrate any existing Git LFS assets. For more information, see "Migrating to a different Git Large File Storage server."
Migrating to a different Git Large File Storage server
Before migrating to a different Git Large File Storage server, you must configure Git LFS to use a third party server. For more information, see "Configuring Git Large File Storage to use a third party server."
Configure the repository with a second remote.
$ git remote add NEW-REMOTE https://NEW-REMOTE-HOSTNAME/path/to/repo
$ git lfs env
&gt; git-lfs/1.1.0 (GitHub; darwin amd64; go 1.5.1; git 94d356c)
&gt; git version 2.7.4 (Apple Git-66)
&gt; Endpoint=https://GITHUB-ENTERPRISE-HOST/path/to/repo/info/lfs (auth=basic)
&gt; Endpoint (NEW-REMOTE)=https://NEW-REMOTE-HOSTNAME/path/to/repo/info/lfs (auth=none)
Fetch all objects from the old remote.
$ git lfs fetch origin --all
&gt; Scanning for all objects ever referenced...
&gt; ✔ 16 objects found
&gt; Fetching objects...
&gt; Git LFS: (16 of 16 files) 48.71 MB / 48.85 MB
Push all objects to the new remote.
$ git lfs push NEW-REMOTE --all
&gt; Scanning for all objects ever referenced...
&gt; ✔ 16 objects found
&gt; Pushing objects...
&gt; Git LFS: (16 of 16 files) 48.00 MB / 48.85 MB, 879.10 KB skipped
Further reading
Git Large File Storage project site
    Did this doc help you?
    Want to learn about new docs features and updates? Sign up for updates!
    We're continually improving our docs. We'd love to hear how we can do better.
      What problem did you have?
        Required
        Choose an option
        Information was unclear
        The content was confusing
        The article didn't answer my question
        Other
      Let us know what we can do better
        Optional
      Can we contact you if we have more questions?
        Optional
      Send
    Thank you! Your feedback has been submitted.
  Help us make these docs great!
  All GitHub docs are open source. See something that's wrong or unclear? Submit a pull request.
    Make a contribution
  Or, learn how to contribute.
      Still need help?
      Ask the GitHub community
      Contact support
        Product
          Features
          Security
          Enterprise
          Case Studies
          Pricing
          Resources
        Platform
          Developer API
          Partners
          Atom
          Electron
          GitHub Desktop
        Support
          Help
          Community Forum
          Training
          Status
          Contact GitHub
        Company
          About
          Blog
          Careers
          Press
          Shop
        © 2020 GitHub, Inc.
        Terms 
        Privacy 
